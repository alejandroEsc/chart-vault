{{/*
Create helm partial for Vault container
*/}}
{{- define "containerVault" }}
- name: {{ template "vault.fullname" . }}
  image: "{{.Values.vault.image}}:{{.Values.vault.imageTag}}"
  securityContext:
    capabilities:
      add:
      - IPC_LOCK
  imagePullPolicy: {{ .Values.vault.imagePullPolicy }}
  ports:
  {{- if .Values.vault.enableTLS }}
  - name: https
    containerPort: 443
  {{- else }}
  - name: http
    containerPort: 80
  {{- end }}
  volumeMounts:
  - name: config
    mountPath: /etc/vault/cfg
    readOnly: true
  {{- if .Values.vault.tls.enabled }}
  - name: vault-tls
    mountPath: {{ .Values.vault.tls.secret.mountPath }}
  {{- end }}
  {{- if .Values.vault.etcdBackend.tls.enabled }}
  - name: etcd-tls
    mountPath: {{ .Values.vault.etcdBackend.tls.secret.mountPath }}
    readOnly: true
  {{- end }}
  env:
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: SCHEME
      value: "{{- if .Values.vault.enableTLS }}https{{- else }}http{{- end }}"
    - name: ADDR
      value: "${MY_POD_NAME}.{{ template "vault.fullname" . }}.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}"
    - name: PORT
      value: "{{- if .Values.vault.enableTLS }}443{{- else }}80{{- end}}"
    - name: VAULT_API_ADDR
      value: "$SCHEME://$ADDR:$PORT"
    - name: VAULT_CLUSTER_ADDR
      value: "$ADDR:{{ .Values.vault.clusterListenerPort }}"
    - name: SCRIPT
      value: &startVault |-
        #!/bin/busybox sh

        # print current environment
        printenv

        cat /etc/vault/cfg/config.hcl

        # start vault server
        vault server -config=/etc/vault/cfg/config.hcl{{- if .Values.vault.enableDebug }} -log-level=debug{{- end }}
  resources:
    limits:
      cpu: {{ .Values.vault.cpu }}
      memory: {{ .Values.vault.memory }}
    requests:
      cpu: {{ .Values.vault.cpu }}
      memory: {{ .Values.vault.memory }}
  command: [ "bin/sh" ]
  args: ["-c", *startVault]
{{- end }}
