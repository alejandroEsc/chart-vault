vault:
  image: "quay.io/samsung_cnct/vault"
  imageTag: "0.8.3"
  imagePullPolicy: "Always"
  component: "vault"
  nodePort: 32443
  backend: etcd
  enableTLS: false
  enableDebug: true
  replicas: 3
  cpu: "512m"
  memory: "200Mi"


# Consul backend example
  consulBackend:
    address: "consul-consul:8500"
    token: "token"

# etcd backend example
  etcdBackend:
    discoverySRV:
    address: "etcd-vault-etcd"
    port: 3379
    etcdApi: "v3"
    path: "vault/"
    sync: "false"
    username: ""
    password: ""
    scheme: "http"
    token: "token"
    clusterAddress: ""
    disableClustering: "false"
    clientCA:
    clientCert:
    clientKey:

# At runtime, vault gets properly init'ed and
# each key, up to "Key Threshold" keys, is pgp
# encrypted and sent to it's recipient. Pubkeys
# need to be base64 encoded.
  init:
    encrypt_key_to_rcpt: false
    key_masters:
      - email: ""
        pubkey: ""
      - email: ""
        pubkey: ""
      - email: ""
        pubkey: ""
    auth_backends:
      - github
      - kubernetes
      - aws
      - approle

# TLS info
  tls:
    cert: ""
    key: ""
    ca: ""


  tolerations:
   # - key: taintKey
   #   value: taintValue
   #   operator: Equal
   #   effect: NoSchedule
  scheduling:
    affinity:
      node:
        type: #requiredDuringSchedulingIgnoredDuringExecution
        labels:
        # - key: iamalabelkey
        #   operator: In
        #   values: ["value1", "value2"]

